# Generated by Django 2.2.2 on 2019-07-09 02:00

from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('desc', models.CharField(max_length=30, verbose_name='描述')),
                ('action', models.TextField(verbose_name='前后置动作')),
                ('action_type', models.SmallIntegerField(verbose_name='动作类型1前置2后置')),
                ('type', models.IntegerField(verbose_name='动作的种类')),
                ('is_valid', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': '前后置动作',
                'db_table': 'Action',
            },
        ),
        migrations.CreateModel(
            name='Config',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('base_url', models.CharField(max_length=100, verbose_name='base_url')),
            ],
            options={
                'verbose_name': '配置',
                'db_table': 'config',
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('desc', models.CharField(max_length=30, verbose_name='描述')),
                ('is_valid', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': '组',
                'db_table': 'Group',
            },
        ),
        migrations.CreateModel(
            name='Parameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('desc', models.CharField(max_length=30, verbose_name='描述')),
                ('parameter_type', models.IntegerField(verbose_name='1key-value2sql3测试用例执行结果')),
                ('parameter', models.TextField(verbose_name='参数')),
                ('is_valid', models.BooleanField(default=1, verbose_name='是否有效')),
                ('group_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.Group')),
            ],
            options={
                'verbose_name': '参数',
                'db_table': 'Parameter',
            },
            managers=[
                ('parameters', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('desc', models.CharField(max_length=30, verbose_name='描述')),
            ],
            options={
                'verbose_name': '前后置动作',
                'db_table': 'Service',
            },
        ),
        migrations.CreateModel(
            name='TestCase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('desc', models.CharField(max_length=30, verbose_name='描述')),
                ('is_valid', models.BooleanField(default=1, verbose_name='是否有效')),
                ('status', models.BooleanField(default=1, verbose_name='0待测试1测试中2已测试')),
                ('test_status', models.BooleanField(default=1, verbose_name='1测试通过2测试失败')),
                ('url', models.CharField(default=1, max_length=200, verbose_name='请求链接')),
                ('request', models.CharField(max_length=300, verbose_name='请求信息')),
                ('method', models.CharField(max_length=100, verbose_name='脚本方法')),
            ],
            options={
                'verbose_name': '测试用例',
                'db_table': 'TestCase',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('email', models.EmailField(max_length=254, verbose_name='邮件')),
                ('is_valid', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': '用户',
                'db_table': 'User',
            },
        ),
        migrations.CreateModel(
            name='Validate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('name', models.CharField(max_length=20, verbose_name='名称')),
                ('desc', models.CharField(max_length=30, verbose_name='描述')),
                ('validator', models.TextField(verbose_name='检验')),
                ('type', models.IntegerField(verbose_name='校验种类')),
                ('is_valid', models.BooleanField(default=1, verbose_name='是否有效')),
            ],
            options={
                'verbose_name': '校验结果',
                'db_table': 'Validate',
            },
        ),
        migrations.CreateModel(
            name='TestSuites',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('seq', models.IntegerField(verbose_name='顺序')),
                ('is_valid', models.BooleanField(default=1, verbose_name='是否有效')),
                ('testcase_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.TestCase')),
            ],
            options={
                'verbose_name': '测试用例集',
                'db_table': 'TestSuites',
            },
        ),
        migrations.CreateModel(
            name='TestCaseValidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('seq', models.IntegerField(verbose_name='顺序')),
                ('is_valid', models.BooleanField(default=1, verbose_name='是否有效')),
                ('testcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.TestCase')),
                ('validate', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.Validate')),
            ],
            options={
                'verbose_name': '测试用例校验结果对应表',
                'db_table': 'TestCaseValidate',
            },
        ),
        migrations.CreateModel(
            name='TestCaseParameter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('seq', models.IntegerField(verbose_name='顺序')),
                ('is_valid', models.BooleanField(default=1, verbose_name='是否有效')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.Parameter')),
                ('testcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.TestCase')),
            ],
            options={
                'verbose_name': '测试用例参数对应表',
                'db_table': 'TestCaseParameter',
            },
        ),
        migrations.CreateModel(
            name='TestCaseConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('config', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.Config')),
                ('testcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.TestCase')),
            ],
            options={
                'verbose_name': '测试用例配置',
                'db_table': 'TestCaseConfig',
            },
        ),
        migrations.CreateModel(
            name='TestCaseAction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('seq', models.IntegerField(verbose_name='顺序')),
                ('is_valid', models.BooleanField(default=1, verbose_name='是否有效')),
                ('type', models.IntegerField(verbose_name='前置1后置2')),
                ('is_log', models.BooleanField(default=1, verbose_name='是否记录')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.Action')),
                ('testcase', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.TestCase')),
            ],
            options={
                'verbose_name': '测试用例前后置对应表',
                'db_table': 'TestCaseAction',
            },
        ),
        migrations.AddField(
            model_name='testcase',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.User'),
        ),
        migrations.CreateModel(
            name='ParameterSql',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(default=django.utils.timezone.now, verbose_name='更新时间')),
                ('column', models.CharField(max_length=20, verbose_name='字段名')),
                ('type', models.IntegerField(verbose_name='校验种类')),
                ('parameter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.Parameter')),
            ],
            options={
                'verbose_name': '测试用例sql执行表',
                'db_table': 'ParameterSql',
            },
        ),
        migrations.AddField(
            model_name='parameter',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.User'),
        ),
        migrations.AddField(
            model_name='action',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Management.User'),
        ),
    ]
